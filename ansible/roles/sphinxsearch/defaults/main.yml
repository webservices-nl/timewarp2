---

sphinx_config_dir: "/etc/sphinxsearch/"
sphinx_log_dir: "/var/log/sphinxsearch/"
sphinx_data_dir: "/var/lib/sphinxsearch/data"

sphinx_default_vars_indexes: []
#    - index:
#        name: "test_index"
#        source: "test_source"
#        path: "/var/lib/sphinxsearch/data/test_index"
#        charset_type: "utf-8"

sphinx_default_vars_sources: []
#    - source:
#        name: "test_source"
#        type: "xmlpipe2"
#        xmlpipe_command: "cat /tmp/test.xml"

sphinx_default_vars_searchd:
    listen: ["127.0.0.1:9312", "9306:mysql41"]
    log: "{{ sphinx_config_dir }}searchd.log" # log file, searchd run info is logged here  optional, default is 'searchd.log'
    query_log: "{{ sphinx_config_dir }}query.log" # query log file, all search queries are logged here optional, default is empty (do not log queries)
    read_timeout: 5 # client read timeout, seconds optional, default is 5
    client_timeout: 300 # request timeout, seconds optional, default is 5 minutes
    max_children: 30 # maximum amount of children to fork (concurrent searches to run) optional, default is 0 (unlimited)
    pid_file: "/var/run/sphinxsearch/searchd.pid" # PID file, searchd process ID file name mandatory
    seamless_rotate: 1      # seamless rotate, prevents rotate stalls if precaching huge datasets optional, default is 1
    preopen_indexes: 1      # whether to forcibly preopen all indexes on startup optional, default is 1 (preopen everything)
    unlink_old: 1           # whether to unlink .old index copies on succesful rotation. optional, default is 1 (do unlink)
    workers: threads        # for RT to work # multi-processing mode (MPM) known values are none, fork, prefork, and threads, threads is required for RT backend to work optional, default is threads
#    binlog_path: "/var/lib/sphinxsearch/data" # binlog.001 etc will be created there. use empty string to disable binlog optional, default is build-time configured data directory
#    persistent_connections_limit: 30 # maximum amount of persistent connections from this master to each agent host optional, but necessary if you use agent_persistent. It is reasonable to set the value as max_children, or less on the agent's hosts.
#    attr_flush_period: 900  # attribute updates periodic flush timeout, seconds updates will be automatically dumped to disk this frequently  optional, default is 0 (disable periodic flush)
#    mva_updates_pool: "1M"  # MVA updates pool size shared between all instances of searchd, disables attr flushes! optional, default size is 1M
#    max_packet_size: "8M"   # max allowed network packet size limits both query packets from clients, and responses from agents optional, default size is 8M
#    max_filters: 256 	    # max allowed per-query filter count optional, default is 256
#    max_filter_values: 4096 # max allowed per-filter values count optional, default is 4096
#    listen_backlog: 5       # socket listen queue length optional, default is 5
#    read_buffer: "256K"     # per-keyword read buffer size optional, default is 256K
#    read_unhinted: "32K"    # unhinted read size (currently used when reading hits) optional, default is 32K
#    max_batch_queries: 32   # max allowed per-batch query count (aka multi-query count) optional, default is 32
#    subtree_docs_cache: 4M  # max common subtree document cache size, per-query optional, default is 0 (disable subtree optimization)
#    subtree_hits_cache: 8M  # max common subtree hit cache size, per-query optional, default is 0 (disable subtree optimization)
#    dist_threads: 4         # max threads to create for searching local parts of a distributed index optional, default is 0, which means disable multi-threaded searching should work with all MPMs (ie. does NOT require workers=threads)
#    binlog_flush: 2         # binlog flush/sync mode. 0 means flush and sync every second. 1 means flush and sync every transaction. 2 means flush every transaction, sync every second. optional, default is 2
#    binlog_max_log_size: "256M" # binlog per-file size limit optional, default is 128M, 0 means no limit per-thread stack size, only affects workers=threads mode optional, default is 64K
#    thread_stack: "128K"
#    expansion_limit: 1000    # per-keyword expansion limit (for dict=keywords prefix searches) optional, default is 0 (no limit)
#    rt_flush_period: 900     # RT RAM chunks flush period optional, default is 0 (no periodic flush)
#    query_log_format: plain  # query log file format optional, known values are plain and sphinxql, default is plain
#    mysql_version_string: '' # version string returned to MySQL network protocol clients optional, default is empty (use Sphinx version)
#    collation_server: utf8_general_ci  # default server-wide collation optional, default is libc_ci
#    collation_libc_locale: en_UK.UTF-8 # server-wide locale for libc based collations optional, default is C
#    watchdog: 1               # threaded server watchdog (only used in workers=threads mode) optional, values are 0 and 1, default is 1 (watchdog on)
#    predicted_time_costs: "doc=64, hit=48, skip=2048, match=64"	# costs for max_predicted_time model, in (imaginary) nanoseconds optional, default is "doc=64, hit=48, skip=2048, match=64"
#    sphinxql_state: sphinxvars.sql # current SphinxQL state (uservars etc) serialization path optional, default is none (do not serialize SphinxQL state)
#    rt_merge_iops: 40 # maximum RT merge thread IO calls per second, and per-call IO size useful for throttling (the background) OPTIMIZE INDEX impact optional, default is 0 (unlimited)
#    rt_merge_maxiosize: 1M
#    ha_ping_interval: 0 # interval between agent mirror pings, in milliseconds 0 means disable pings optional, default is 1000
#    ha_period_karma: 60 #agent mirror statistics window size, in seconds. stats older than the window size (karma) are retired that is, they will not affect master choice of agents in any way optional, default is 60 seconds
#    prefork_rotation_throttle: 100 # delay between preforked children restarts on rotation, in milliseconds optional, default is 0 (no delay)
#    snippets_file_prefix: /mnt/common/server1/ # a prefix to prepend to the local file names when creating snippets with load_files and/or load_files_scatter options optional, default is empty

sphinx_default_vars_indexer:
    mem_limit: "32M"
#    max_iops: 40  #maximum IO calls per second (for I/O throttling) optional, default is 0 (unlimited)
#    max_iosize: 1048576 #maximum IO call size, bytes (for I/O throttling) optional, default is 0 (unlimited)
#    max_xmlpipe2_field: 4M #maximum xmlpipe2 field length, bytes optional, default is 2M
#    write_buffer: 1M # write buffer size, bytes several (currently up to 4) buffers will be allocated write buffers are allocated in addition to mem_limit optional, default is 1M
#    max_file_field_buffer: 32M #maximum file field adaptive buffer size optional, default is 8M, minimum is 1M
#    on_file_field_error: skip_document # how to handle IO errors in file fields known values are 'ignore_field', 'skip_document', and 'fail_index' optional, default is 'ignore_field'
#    lemmatizer_cache: 512M # lemmatizer cache size, improves the indexing time when the lemmatization is enabled optional, default is 256K

sphinx_default_vars_common: {}
#  lemmatizer_base: "/usr/local/share/sphinx/dicts" # lemmatizer dictionaries base path, optional, defaut is /usr/local/share (see ./configure --datadir)
#  on_json_attr_error: "fail_index" # how to handle syntax errors in JSON attributes known values are 'ignore_attr' and 'fail_index' optional, default is 'ignore_attr'
#  json_autoconv_numbers: 1 # whether to auto-convert numeric values from strings in JSON attributes with auto-conversion, string value with actually numeric data (as in {"key":"12345"}) gets stored as a number, rather than string optional, allowed values are 0 and 1, default is 0 (do not convert)
#  json_autoconv_keynames: lowercase # whether and how to auto-convert key names in JSON attributes known value is 'lowercase' optional, default is unspecified (do nothing)
#  rlp_root: "/usr/local/share/sphinx/rlp" # path to RLP root directory optional, defaut is /usr/local/share (see ./configure --datadir)
#  rlp_environment: "/usr/local/share/sphinx/rlp/rlp/etc/rlp-environment.xml" # path to RLP environment file optional, defaut is /usr/local/share/rlp-environment.xml (see ./configure --datadir)
#  rlp_max_batch_size: '100k' # maximum total size of documents batched before processing them by the RLP optional, default is 51200
#  rlp_max_batch_docs: 100 # maximum number of documents batched before processing them by the RLP optional, default is 50
#  plugin_dir: /usr/local/sphinx/lib # trusted plugin directory optional, default is empty (disable UDFs)

sphinxsearch_common_vars : "{{ sphinx_default_vars_common  | combine(sphinxsearch.common |default({}), recursive=True) }}"
sphinxsearch_indexer_vars: "{{ sphinx_default_vars_indexer | combine(sphinxsearch.indexer|default({}), recursive=True) }}"
sphinxsearch_searchd_vars: "{{ sphinx_default_vars_searchd | combine(sphinxsearch.searchd|default({}), recursive=True) }}"

sphinxsearch_indexes_vars: "{{ sphinx_default_vars_indexes | union(sphinxsearch.indexes) }}"
sphinxsearch_sources_vars: "{{ sphinx_default_vars_sources | union(sphinxsearch.sources) }}"
